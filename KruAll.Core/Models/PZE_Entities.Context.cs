//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KruAll.Core.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PZE_Entities : DbContext
    {
        public PZE_Entities()
            : base("name=PZE_Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Absence> Absences { get; set; }
        public virtual DbSet<AC_PermissionMapping> AC_PermissionMapping { get; set; }
        public virtual DbSet<AC_PermissionProfile> AC_PermissionProfile { get; set; }
        public virtual DbSet<AC_Permissions> AC_Permissions { get; set; }
        public virtual DbSet<AC_PersPasswords> AC_PersPasswords { get; set; }
        public virtual DbSet<AC_PersProfileMapping> AC_PersProfileMapping { get; set; }
        public virtual DbSet<AC_Reports> AC_Reports { get; set; }
        public virtual DbSet<AC_ReportSettings> AC_ReportSettings { get; set; }
        public virtual DbSet<AccessCalendar> AccessCalendars { get; set; }
        public virtual DbSet<AccessCalendarMonth> AccessCalendarMonths { get; set; }
        public virtual DbSet<AccessCalendarProfile> AccessCalendarProfiles { get; set; }
        public virtual DbSet<AccessControlLog> AccessControlLogs { get; set; }
        public virtual DbSet<AccessGroup> AccessGroups { get; set; }
        public virtual DbSet<AccessGroupEmployee> AccessGroupEmployees { get; set; }
        public virtual DbSet<AccessPlanGroupDoorMapping> AccessPlanGroupDoorMappings { get; set; }
        public virtual DbSet<AccessProfileAccessGroupMapping> AccessProfileAccessGroupMappings { get; set; }
        public virtual DbSet<Account> Accounts { get; set; }
        public virtual DbSet<Accounts_Day> Accounts_Day { get; set; }
        public virtual DbSet<Accounts_Month> Accounts_Month { get; set; }
        public virtual DbSet<Accounts_Week> Accounts_Week { get; set; }
        public virtual DbSet<Accounts_Year> Accounts_Year { get; set; }
        public virtual DbSet<Address> Addresses { get; set; }
        public virtual DbSet<Area> Areas { get; set; }
        public virtual DbSet<BookingPair> BookingPairs { get; set; }
        public virtual DbSet<Break> Breaks { get; set; }
        public virtual DbSet<BreaksMapped> BreaksMappeds { get; set; }
        public virtual DbSet<BreaksType> BreaksTypes { get; set; }
        public virtual DbSet<BuildingPlan> BuildingPlans { get; set; }
        public virtual DbSet<CCAccount> CCAccounts { get; set; }
        public virtual DbSet<CellPhoneMaster> CellPhoneMasters { get; set; }
        public virtual DbSet<Client> Clients { get; set; }
        public virtual DbSet<Color> Colors { get; set; }
        public virtual DbSet<CostCenter> CostCenters { get; set; }
        public virtual DbSet<Country> Countries { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<DailyAccountTime> DailyAccountTimes { get; set; }
        public virtual DbSet<DailyBooking> DailyBookings { get; set; }
        public virtual DbSet<DailyBookingsReport> DailyBookingsReports { get; set; }
        public virtual DbSet<DailyCalendar> DailyCalendars { get; set; }
        public virtual DbSet<DailyCalendarMapped> DailyCalendarMappeds { get; set; }
        public virtual DbSet<DailyProgramMapped> DailyProgramMappeds { get; set; }
        public virtual DbSet<DailyProgram> DailyPrograms { get; set; }
        public virtual DbSet<DatafoxTerminalInstance> DatafoxTerminalInstances { get; set; }
        public virtual DbSet<DatafoxTerminalReader> DatafoxTerminalReaders { get; set; }
        public virtual DbSet<Department> Departments { get; set; }
        public virtual DbSet<DP_Shifts> DP_Shifts { get; set; }
        public virtual DbSet<DynamicColumn> DynamicColumns { get; set; }
        public virtual DbSet<DynamicField> DynamicFields { get; set; }
        public virtual DbSet<DynamicFieldsMember> DynamicFieldsMembers { get; set; }
        public virtual DbSet<EmpAdditionalInfo> EmpAdditionalInfoes { get; set; }
        public virtual DbSet<Employee> Employees { get; set; }
        public virtual DbSet<EmployeeAbsence> EmployeeAbsences { get; set; }
        public virtual DbSet<EmployeeInfo> EmployeeInfoes { get; set; }
        public virtual DbSet<EmployeePhoto> EmployeePhotos { get; set; }
        public virtual DbSet<EmployeeTariff> EmployeeTariffs { get; set; }
        public virtual DbSet<ERP_Anrede> ERP_Anrede { get; set; }
        public virtual DbSet<ERP_KAnsprechp> ERP_KAnsprechp { get; set; }
        public virtual DbSet<ERP_Kunden> ERP_Kunden { get; set; }
        public virtual DbSet<ERP_KundenGr> ERP_KundenGr { get; set; }
        public virtual DbSet<ERP_KundenGrMark> ERP_KundenGrMark { get; set; }
        public virtual DbSet<ERP_KundenMark> ERP_KundenMark { get; set; }
        public virtual DbSet<ERP_Länder> ERP_Länder { get; set; }
        public virtual DbSet<ERP_SoftwareContractStatus> ERP_SoftwareContractStatus { get; set; }
        public virtual DbSet<ERP_SoftwareModules> ERP_SoftwareModules { get; set; }
        public virtual DbSet<ERP_SoftwareUpdateService> ERP_SoftwareUpdateService { get; set; }
        public virtual DbSet<FingerprintPassword> FingerprintPasswords { get; set; }
        public virtual DbSet<FingerPrint> FingerPrints { get; set; }
        public virtual DbSet<Global_Settings> Global_Settings { get; set; }
        public virtual DbSet<GroupAccessProfile> GroupAccessProfiles { get; set; }
        public virtual DbSet<Holiday> Holidays { get; set; }
        public virtual DbSet<HolidayCalendar> HolidayCalendars { get; set; }
        public virtual DbSet<HolidayCalendarMonth> HolidayCalendarMonths { get; set; }
        public virtual DbSet<HolidayPlanAccessProfileMonth> HolidayPlanAccessProfileMonths { get; set; }
        public virtual DbSet<HolidayPlanCalendar> HolidayPlanCalendars { get; set; }
        public virtual DbSet<HolidayPlanCalendarMapped> HolidayPlanCalendarMappeds { get; set; }
        public virtual DbSet<HolidayPlanCalendarMonth> HolidayPlanCalendarMonths { get; set; }
        public virtual DbSet<HolidayPlanCalendarMonthMapped> HolidayPlanCalendarMonthMappeds { get; set; }
        public virtual DbSet<JC_Activities> JC_Activities { get; set; }
        public virtual DbSet<JC_Currency> JC_Currency { get; set; }
        public virtual DbSet<Location> Locations { get; set; }
        public virtual DbSet<LocationsFederalState> LocationsFederalStates { get; set; }
        public virtual DbSet<MapCalendar> MapCalendars { get; set; }
        public virtual DbSet<MapCalendarMapped> MapCalendarMappeds { get; set; }
        public virtual DbSet<MapCalendarMonth> MapCalendarMonths { get; set; }
        public virtual DbSet<MapCalendarMonthMapped> MapCalendarMonthMappeds { get; set; }
        public virtual DbSet<MemberAccessGroup> MemberAccessGroups { get; set; }
        public virtual DbSet<MemberCommonInfo> MemberCommonInfoes { get; set; }
        public virtual DbSet<MemberDrivingLicense> MemberDrivingLicenses { get; set; }
        public virtual DbSet<MemberDuration> MemberDurations { get; set; }
        public virtual DbSet<MemberDynamicField> MemberDynamicFields { get; set; }
        public virtual DbSet<MemberGroup> MemberGroups { get; set; }
        public virtual DbSet<MemberHealthCard> MemberHealthCards { get; set; }
        public virtual DbSet<MemberIdentityCard> MemberIdentityCards { get; set; }
        public virtual DbSet<MemberPassport> MemberPassports { get; set; }
        public virtual DbSet<MembersAccessPlanMapping> MembersAccessPlanMappings { get; set; }
        public virtual DbSet<MembersData> MembersDatas { get; set; }
        public virtual DbSet<MembersTransponder> MembersTransponders { get; set; }
        public virtual DbSet<MenuTable> MenuTables { get; set; }
        public virtual DbSet<MonthlyCalendar> MonthlyCalendars { get; set; }
        public virtual DbSet<MonthlyCalendarMapped> MonthlyCalendarMappeds { get; set; }
        public virtual DbSet<Pers_AccessGroups> Pers_AccessGroups { get; set; }
        public virtual DbSet<Pers_AccessPlanDuration> Pers_AccessPlanDuration { get; set; }
        public virtual DbSet<Pers_AdditionalInfo> Pers_AdditionalInfo { get; set; }
        public virtual DbSet<Pers_Client> Pers_Client { get; set; }
        public virtual DbSet<Pers_Contact> Pers_Contact { get; set; }
        public virtual DbSet<Pers_CostCenters> Pers_CostCenters { get; set; }
        public virtual DbSet<Pers_Departments> Pers_Departments { get; set; }
        public virtual DbSet<Pers_DrivingLicense> Pers_DrivingLicense { get; set; }
        public virtual DbSet<Pers_DynamicFields> Pers_DynamicFields { get; set; }
        public virtual DbSet<Pers_HealthCard> Pers_HealthCard { get; set; }
        public virtual DbSet<Pers_IdentityCard> Pers_IdentityCard { get; set; }
        public virtual DbSet<Pers_Locations> Pers_Locations { get; set; }
        public virtual DbSet<Pers_Passport> Pers_Passport { get; set; }
        public virtual DbSet<Pers_Photo> Pers_Photo { get; set; }
        public virtual DbSet<Pers_PinCode> Pers_PinCode { get; set; }
        public virtual DbSet<Pers_Transponders> Pers_Transponders { get; set; }
        public virtual DbSet<Pers_Type> Pers_Type { get; set; }
        public virtual DbSet<Pers_Vehicles> Pers_Vehicles { get; set; }
        public virtual DbSet<Pers_Visitors> Pers_Visitors { get; set; }
        public virtual DbSet<Personal> Personals { get; set; }
        public virtual DbSet<PersonnelTariff> PersonnelTariffs { get; set; }
        public virtual DbSet<PlannedCalendar> PlannedCalendars { get; set; }
        public virtual DbSet<PlannedCalendarMapped> PlannedCalendarMappeds { get; set; }
        public virtual DbSet<PlannedCalendarTime> PlannedCalendarTimes { get; set; }
        public virtual DbSet<PlannedCalendarTimeMapped> PlannedCalendarTimeMappeds { get; set; }
        public virtual DbSet<Portal_Audit> Portal_Audit { get; set; }
        public virtual DbSet<Portal_PermissionMapping> Portal_PermissionMapping { get; set; }
        public virtual DbSet<Portal_PermissionProfile> Portal_PermissionProfile { get; set; }
        public virtual DbSet<Portal_Permissions> Portal_Permissions { get; set; }
        public virtual DbSet<Portal_ProfileUSerMapping> Portal_ProfileUSerMapping { get; set; }
        public virtual DbSet<Portal_Users> Portal_Users { get; set; }
        public virtual DbSet<RawBooking> RawBookings { get; set; }
        public virtual DbSet<ReaderAccessPlan> ReaderAccessPlans { get; set; }
        public virtual DbSet<ReaderAssigned> ReaderAssigneds { get; set; }
        public virtual DbSet<ReaderVisitorPlan> ReaderVisitorPlans { get; set; }
        public virtual DbSet<ResourceEvent> ResourceEvents { get; set; }
        public virtual DbSet<ResourceEventMapped> ResourceEventMappeds { get; set; }
        public virtual DbSet<Room> Rooms { get; set; }
        public virtual DbSet<Session> Sessions { get; set; }
        public virtual DbSet<Shift_Breaks> Shift_Breaks { get; set; }
        public virtual DbSet<ShiftResource> ShiftResources { get; set; }
        public virtual DbSet<Shift> Shifts { get; set; }
        public virtual DbSet<Specialday> Specialdays { get; set; }
        public virtual DbSet<Status_Static> Status_Static { get; set; }
        public virtual DbSet<Supplier> Suppliers { get; set; }
        public virtual DbSet<SurchargeDay> SurchargeDays { get; set; }
        public virtual DbSet<SurchargeMapped> SurchargeMappeds { get; set; }
        public virtual DbSet<Surcharge> Surcharges { get; set; }
        public virtual DbSet<SurchargesAccountsMapping> SurchargesAccountsMappings { get; set; }
        public virtual DbSet<SwitchCalendar> SwitchCalendars { get; set; }
        public virtual DbSet<SwitchCalendarMapped> SwitchCalendarMappeds { get; set; }
        public virtual DbSet<SwitchCalendarMonth> SwitchCalendarMonths { get; set; }
        public virtual DbSet<SwitchCalendarMonthMapped> SwitchCalendarMonthMappeds { get; set; }
        public virtual DbSet<SwitchPlan> SwitchPlans { get; set; }
        public virtual DbSet<SwitchProfilePair> SwitchProfilePairs { get; set; }
        public virtual DbSet<SwitchProfile> SwitchProfiles { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<TA_BookingsReport> TA_BookingsReport { get; set; }
        public virtual DbSet<TA_BookingsReportAbsences> TA_BookingsReportAbsences { get; set; }
        public virtual DbSet<TA_BookingsReportAccounts> TA_BookingsReportAccounts { get; set; }
        public virtual DbSet<TA_BookingsReportTitles> TA_BookingsReportTitles { get; set; }
        public virtual DbSet<TA_BookingsReportTypes> TA_BookingsReportTypes { get; set; }
        public virtual DbSet<TA_PersonalGroupMapping> TA_PersonalGroupMapping { get; set; }
        public virtual DbSet<TA_TerminalGroupMapping> TA_TerminalGroupMapping { get; set; }
        public virtual DbSet<TA_TerminalGroups> TA_TerminalGroups { get; set; }
        public virtual DbSet<Tariff> Tariffs { get; set; }
        public virtual DbSet<TariffCalendar> TariffCalendars { get; set; }
        public virtual DbSet<TbAccessPlan> TbAccessPlans { get; set; }
        public virtual DbSet<TbAccessPlanGroup> TbAccessPlanGroups { get; set; }
        public virtual DbSet<TbAccessPlanMembersMapping> TbAccessPlanMembersMappings { get; set; }
        public virtual DbSet<TbAccessPlanPersMapping> TbAccessPlanPersMappings { get; set; }
        public virtual DbSet<TbAcessPlanReaderMapping> TbAcessPlanReaderMappings { get; set; }
        public virtual DbSet<TbVisitorPlan> TbVisitorPlans { get; set; }
        public virtual DbSet<TerminalBookingRawData> TerminalBookingRawDatas { get; set; }
        public virtual DbSet<TerminalConfig> TerminalConfigs { get; set; }
        public virtual DbSet<TerminalConnect> TerminalConnects { get; set; }
        public virtual DbSet<TerminalConnectionType> TerminalConnectionTypes { get; set; }
        public virtual DbSet<TerminalDatafoxFunction> TerminalDatafoxFunctions { get; set; }
        public virtual DbSet<TerminalFunctionKey> TerminalFunctionKeys { get; set; }
        public virtual DbSet<TerminalGroupMapping> TerminalGroupMappings { get; set; }
        public virtual DbSet<TerminalGroup> TerminalGroups { get; set; }
        public virtual DbSet<TerminalInfo> TerminalInfoes { get; set; }
        public virtual DbSet<TerminalInfoText> TerminalInfoTexts { get; set; }
        public virtual DbSet<TerminalOEM> TerminalOEMs { get; set; }
        public virtual DbSet<TerminalReader> TerminalReaders { get; set; }
        public virtual DbSet<TerminalReadersStatic> TerminalReadersStatics { get; set; }
        public virtual DbSet<Terminal> Terminals { get; set; }
        public virtual DbSet<TerminalUtility> TerminalUtilities { get; set; }
        public virtual DbSet<TimeRanx> TimeRanges { get; set; }
        public virtual DbSet<Transponder> Transponders { get; set; }
        public virtual DbSet<UserRole> UserRoles { get; set; }
        public virtual DbSet<VehicleType> VehicleTypes { get; set; }
        public virtual DbSet<VirtualPersonalGroupsMapping> VirtualPersonalGroupsMappings { get; set; }
        public virtual DbSet<VirtualTerminal> VirtualTerminals { get; set; }
        public virtual DbSet<VirtualTerminalCommunicationSetting> VirtualTerminalCommunicationSettings { get; set; }
        public virtual DbSet<VirtualTerminalFunctionKey> VirtualTerminalFunctionKeys { get; set; }
        public virtual DbSet<VirtualTerminalGroup> VirtualTerminalGroups { get; set; }
        public virtual DbSet<VirtualTerminalGroupsMapping> VirtualTerminalGroupsMappings { get; set; }
        public virtual DbSet<VirtualTerminalInputSetting> VirtualTerminalInputSettings { get; set; }
        public virtual DbSet<Visitor_Vehicle> Visitor_Vehicle { get; set; }
        public virtual DbSet<VisitorAccessTime> VisitorAccessTimes { get; set; }
        public virtual DbSet<VisitorAdditionalInfo> VisitorAdditionalInfoes { get; set; }
        public virtual DbSet<VisitorApplication> VisitorApplications { get; set; }
        public virtual DbSet<VisitorCompanyTb> VisitorCompanyTbs { get; set; }
        public virtual DbSet<VisitorContact> VisitorContacts { get; set; }
        public virtual DbSet<VisitorPlanGroup> VisitorPlanGroups { get; set; }
        public virtual DbSet<Visitor> Visitors { get; set; }
        public virtual DbSet<VisitorTransponder> VisitorTransponders { get; set; }
        public virtual DbSet<VisitorType> VisitorTypes { get; set; }
        public virtual DbSet<WorkedHoursAcc> WorkedHoursAccs { get; set; }
        public virtual DbSet<ZuttritProfile> ZuttritProfiles { get; set; }
        public virtual DbSet<ZuttritProfilesTimeFrame> ZuttritProfilesTimeFrames { get; set; }
        public virtual DbSet<AuditHist> AuditHists { get; set; }
        public virtual DbSet<JC_Projects> JC_Projects { get; set; }
        public virtual DbSet<Pers_Archive> Pers_Archive { get; set; }
        public virtual DbSet<ShiftResourceBac> ShiftResourceBacs { get; set; }
        public virtual DbSet<Status_Dynamic> Status_Dynamic { get; set; }
        public virtual DbSet<TerminalOEMNew> TerminalOEMNews { get; set; }
        public virtual DbSet<TerminalsNew> TerminalsNews { get; set; }
        public virtual DbSet<AC_PersPasswordsProfile> AC_PersPasswordsProfile { get; set; }
        public virtual DbSet<AC_vwPersonelAccessPlan> AC_vwPersonelAccessPlan { get; set; }
        public virtual DbSet<DF_TIME> DF_TIME { get; set; }
        public virtual DbSet<HolidayAccessPlam_with_DateTime> HolidayAccessPlam_with_DateTime { get; set; }
        public virtual DbSet<HolidayCalendar_with_DateTime> HolidayCalendar_with_DateTime { get; set; }
        public virtual DbSet<MV_AccessControlLogs> MV_AccessControlLogs { get; set; }
        public virtual DbSet<MV_AccessControlTransactionPersonel> MV_AccessControlTransactionPersonel { get; set; }
        public virtual DbSet<MV_TerminalReaderBuildingPlans> MV_TerminalReaderBuildingPlans { get; set; }
        public virtual DbSet<RV_AccessPlanAccessCalendar> RV_AccessPlanAccessCalendar { get; set; }
        public virtual DbSet<RV_AccessPlanPersonnel> RV_AccessPlanPersonnel { get; set; }
        public virtual DbSet<RV_AccessProfilesPerTerminal> RV_AccessProfilesPerTerminal { get; set; }
        public virtual DbSet<RV_HolidayCalendar> RV_HolidayCalendar { get; set; }
        public virtual DbSet<RV_HolidayCalendarAccessPlan> RV_HolidayCalendarAccessPlan { get; set; }
        public virtual DbSet<RV_HolidayCalendarNames> RV_HolidayCalendarNames { get; set; }
        public virtual DbSet<RV_HolidayPlanAccessPlan> RV_HolidayPlanAccessPlan { get; set; }
        public virtual DbSet<RV_HolidayPlanAccessProfilesPerTerminal> RV_HolidayPlanAccessProfilesPerTerminal { get; set; }
        public virtual DbSet<RV_HolidayPlanPerTerminal> RV_HolidayPlanPerTerminal { get; set; }
        public virtual DbSet<RV_HolidayPlanSwitchPlan> RV_HolidayPlanSwitchPlan { get; set; }
        public virtual DbSet<RV_SwitchPlanSwitchCalendar> RV_SwitchPlanSwitchCalendar { get; set; }
        public virtual DbSet<RV_SwitchProfileGroupedPerTerminal> RV_SwitchProfileGroupedPerTerminal { get; set; }
        public virtual DbSet<RV_VisitorPlanAccessCalendar> RV_VisitorPlanAccessCalendar { get; set; }
        public virtual DbSet<RV_VisitorPlanVisitors> RV_VisitorPlanVisitors { get; set; }
        public virtual DbSet<SCP> SCPs { get; set; }
        public virtual DbSet<SwitchCalendarProfile> SwitchCalendarProfiles { get; set; }
        public virtual DbSet<View_AccessCalendarProfiles> View_AccessCalendarProfiles { get; set; }
        public virtual DbSet<View_AccessLogs> View_AccessLogs { get; set; }
        public virtual DbSet<View_CardAllocationOverview> View_CardAllocationOverview { get; set; }
        public virtual DbSet<View_DFHoliday> View_DFHoliday { get; set; }
        public virtual DbSet<View_ERPSoftwareUpdateService> View_ERPSoftwareUpdateService { get; set; }
        public virtual DbSet<View_MemberAccessLog> View_MemberAccessLog { get; set; }
        public virtual DbSet<View_ReaderBuildingPlan> View_ReaderBuildingPlan { get; set; }
        public virtual DbSet<View_SwitchTimes> View_SwitchTimes { get; set; }
        public virtual DbSet<View_SwitchTimesCalendarProfiles> View_SwitchTimesCalendarProfiles { get; set; }
        public virtual DbSet<View_TeminalInformation> View_TeminalInformation { get; set; }
        public virtual DbSet<View_TerminalAccessProfiles> View_TerminalAccessProfiles { get; set; }
        public virtual DbSet<View_TerminalFunction> View_TerminalFunction { get; set; }
        public virtual DbSet<View_TerminalHolidays> View_TerminalHolidays { get; set; }
        public virtual DbSet<View_TerminalReader> View_TerminalReader { get; set; }
        public virtual DbSet<View_Transponders> View_Transponders { get; set; }
        public virtual DbSet<View_VisitorAccessLog> View_VisitorAccessLog { get; set; }
        public virtual DbSet<View_VisitorEntryLog> View_VisitorEntryLog { get; set; }
        public virtual DbSet<ViewMemberCardsInfo> ViewMemberCardsInfoes { get; set; }
        public virtual DbSet<ViewTA_TerminalGroupMapping> ViewTA_TerminalGroupMapping { get; set; }
        public virtual DbSet<ViewTerminalGroupMapping> ViewTerminalGroupMappings { get; set; }
        public virtual DbSet<vw_PermissionMapping> vw_PermissionMapping { get; set; }
        public virtual DbSet<vw_PortalKunden> vw_PortalKunden { get; set; }
        public virtual DbSet<vw_PortalUserProfile> vw_PortalUserProfile { get; set; }
        public virtual DbSet<vw_PortalUsersProfilePermissionMapping> vw_PortalUsersProfilePermissionMapping { get; set; }
        public virtual DbSet<vw_users> vw_users { get; set; }
        public virtual DbSet<VwHolidayCalender> VwHolidayCalenders { get; set; }
        public virtual DbSet<VwPersDataZUT> VwPersDataZUTs { get; set; }
        public virtual DbSet<VwPersonnelData> VwPersonnelDatas { get; set; }
        public virtual DbSet<vwPersPinCode> vwPersPinCodes { get; set; }
        public virtual DbSet<vwSwitchProfile> vwSwitchProfiles { get; set; }
        public virtual DbSet<vwVisitorCompany> vwVisitorCompanies { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<Nullable<int>> SwitchProfileTimePairs(string persno, Nullable<int> month, Nullable<int> year)
        {
            var persnoParameter = persno != null ?
                new ObjectParameter("persno", persno) :
                new ObjectParameter("persno", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SwitchProfileTimePairs", persnoParameter, monthParameter, yearParameter);
        }
    
        public virtual int usp_GetActiveUsers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_GetActiveUsers");
        }
    }
}
